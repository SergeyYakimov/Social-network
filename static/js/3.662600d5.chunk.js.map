{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","style","item","src","message","like","maxLength30","maxLengthCreator","MyPosts","memo","postsElements","posts","map","post","text","likeCount","createRef","postsBlock","onSubmit","values","addPost","newPostText","AddNewPostForm","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","reduxForm","form","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.662600d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Wi19Q\",\"posts\":\"MyPosts_posts__3YZyI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3MIvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1WSuh\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\t\r\n  return (\r\n              <div className={style.item}>\r\n                <img src=\"https://yt3.ggpht.com/a/AGF-l7-gRDVH6asZkW92cY1ONdIkDlpWPLSPoOlpSg=s900-mo-c-c0xffffffff-rj-k-no\"></img>\r\n                {props.message}\r\n                <div>\r\n                  <span>{props.like}</span>\r\n                </div>\r\n              </div>\r\n              \r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required, maxLengthCreator} from './../../../utils/validators/validators.js';\r\nimport {Textarea} from './../../common/FormControls/FormControls.js';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map(post => <Post message={post.text} like={post.likeCount} />);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n      \r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostForm onSubmit={onAddPost}/>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\n//class MyPosts extends React.PureComponent {\r\n\r\n  /*shouldComponentUpdate (nextProps, nextState) {\r\n    return nextProps !== this.props || nextState !== this.state;\r\n  }*/\r\n\r\n  /*render() {\r\n      let postsElements = this.props.posts.map(post => <Post message={post.text} like={post.likeCount} />);\r\n\r\n      let newPostElement = React.createRef();\r\n\r\n      let onAddPost = (values) => {\r\n        this.props.addPost(values.newPostText);\r\n      }\r\n      \r\n      return (\r\n              <div className={style.postsBlock}>\r\n                <h3>My posts</h3>\r\n                  <AddNewPostForm onSubmit={onAddPost}/>\r\n                <div className={style.posts}>\r\n                  {postsElements}\r\n                </div>\r\n               </div>\r\n      )\r\n    }\r\n}*/\r\n\r\nlet AddNewPostForm = (props) => {\r\n      return (\r\n        <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            <Field component={Textarea} \r\n            name={\"newPostText\"} \r\n            placeholder={\"Post message\"}\r\n            validate={[required, maxLength30]}/>\r\n          </div>\r\n          <div>\r\n            <button>Add post\r\n            </button>\r\n          </div>    \r\n        </form>      \r\n      )\r\n  }\r\n\r\nAddNewPostForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts.jsx';\r\nimport {addPostActionCreator} from './../../../Redux/profile-reducer.js';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n      }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status); \r\n\r\n    useEffect( () => {\r\n      setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}  \r\n            value={status}/>\r\n        </div>\r\n      }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from './../../common/Preloader/Preloader.js';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.js';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n          <div className={style.descriptionBlock}>\r\n            <img src={profile.photos.large} />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.js';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t    <ProfileInfo profile={props.profile} status={props.status} \r\n\t\t    updateStatus={props.updateStatus}/>\r\n\t\t    <MyPostsContainer />\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile.js';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {getUserProfile, getStatus, updateStatus} from './../../Redux/profile-reducer.js';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect.js';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t    <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}  />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({profile: state.profilePage.profile, \r\n\tstatus: state.profilePage.status, authorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth});\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),withRouter,withAuthRedirect)(ProfileContainer);"],"sourceRoot":""}